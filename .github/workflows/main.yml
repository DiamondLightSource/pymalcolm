name: GitHub Actions

# Trigger action for every push/PR
on: [push, pull_request]

env:
  # EPICS Base version for system block IOC
  EPICS_BASE_VER: R3.14.12.7
  EPICS_BASE_DIR: epics_base

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Git config
      run: |
        git config --global user.email "MrMalcolm@github.com"
        git config --global user.name "Mr. Malcolm"
    - name: Cache EPICS Base
      uses: actions/cache@v2
      id: epics-base-cache
      with:
        path: ${{ env.EPICS_BASE_DIR }}
        key: epics_base-${{ runner.os }}-${{ env.EPICS_BASE_VER }}
    - name: Install EPICS Base
      if: steps.epics-base-cache.outputs.cache-hit != 'true'
      run: |
        wget -nv https://github.com/epics-base/epics-base/archive/${EPICS_BASE_VER}.tar.gz
        tar -zxf ${EPICS_BASE_VER}.tar.gz
        mv epics-base-${EPICS_BASE_VER} ${EPICS_BASE_DIR}
        make -sj -C ${EPICS_BASE_DIR}/
    - name: Set EPICS Base path
      run: echo "EPICS_BASE=`pwd`/${EPICS_BASE_DIR}" >> $GITHUB_ENV
    - name: Environment information
      run: |
        pwd
        ls -l ${EPICS_BASE_DIR}
        env
        ifconfig
        IP=$(ip addr show docker0 | grep -Po 'inet \K[\d.]+')
        echo $IP
        # Fix docker0 broadcast address so p4p will work
        sudo ip addr del $IP/16 dev docker0
        sudo ip addr add $IP/16 broadcast + dev docker0
        ifconfig
    - name: Install Python dependencies
      run: |
        # Install pipenv
        python -m pip install --upgrade pip pipenv wheel
        # Skip lock as it contains hashes from the subset installed on DLS PyPI
        pipenv install --skip-lock --dev
        pipenv run pip list installed
        python setup.py bdist_wheel
    - name: flake8
      run: pipenv run flake8
    - name: Pytest
      run: pipenv run tests
    - name: Docs
      run: pipenv run docs
    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true # optional (default = false)
        files: ./coverage.xml
